#include <iostream>
#include<math.h>
using namespace std;


int main() {

// Code to convert a decimal number into a binary number:

  int n, answer=0, bit, count=0;
  cout<<"Enter the number: ";
  cin>>n;

  while(n>0)
    {
      bit=n&1;
      n>>=1;
      answer+=bit*pow(10,count);
      count=count+1;
    }
  cout<<"The binary representation of the number is: "<<answer;
  
  // Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight).

  unsigned int n, count=0;
  cout<<"Enter the number: ";
  cin>>n;

  while(n>0)
    {
      if(n&1)
      {
        count++;
      }
      n>>=1;
    }
  cout<<"The number of 1 bits are:  "<<count;

  // Code to reverse the digits of a number

  int n, answer=0,i=0;
  cout<<"Enter the number: ";
  cin>>n;

  while(n!=0)
    {
      int digit=n%10;
      answer= answer*10 + digit;
      n/=10;
    }
  cout<<"The reversed number is : "<<answer;
  
  // Code to reverse the bits of an integer

  int n, answer=0,i=0;
  cout<<"Enter the integer: ";
  cin>>n;

  while(n!=0)
    {
      int bit= n&1;
      answer = (answer * 10) + bit;
      n=n>>1;
      i++;
    }
  cout<<"The reversed bit is: "<<answer;
  
  // Code to convert binary to decimal

  int n, i=0, ans=0;
  cout<<"Enter the number : ";
  cin>>n;

  while(n!=0)
    {
      //int bit=n&1;
      int digit=n%10;
      if (digit==1)
      {
        ans= ans + pow(2,i);
      }
      n=n/10;
      i++;
    }

  cout<<"The number in decimal is: "<<ans;
  
  // 1009. Leetcode - The complement of an integer is the integer you get when you flip all the 0's to 1's and all the 1's to 0's in its binary representation.
  // For example, The integer 5 is "101" in binary and its complement is "010" which is the integer 2.
  // Given an integer n, return its complement.

  // Code in 1st attempt
  
  class Solution {
public:
    int bitwiseComplement(int n) {
        // store the binary number
        
       // {
            int bin=0, i=0;
            while(n!=0)
            {
                // pow()
                int remainder = n%2;
                bin = (remainder * pow(10,i)) + bin;
                i++;
                n/=10;
            }
       // }
        
        // complement the binary number
        
        //{
            int complement = 0, j=0;
            while( bin!=0)
            {
                int bit = bin % 10;
                if(bit==0)
                {
                   complement = (1 * pow(10,i)) + complement;
                    j++;
                    bin/=10;
                }
                else if (bit==1)
                {
                    j++;
                    bin/=10;
                }
            }
       // }
        
        // convert to decimal number
        
        int ans=0, k=0;
        while(complement != 0)
        {
            int digit = complement % 10;
            ans = ans + (digit * pow(2,k));
            k++;
            complement/=10;
        }
        
        return ans;
        
    }
};

  // Code to print the binary form in which an integer is stored

  int n, bin = 0, i=0;
  cout<<"Enter the integer: ";
  cin>>n;

  while(n!=0)
    {
      int bit = n&1;
      bin = ((bit * pow(10,i)) + bin);
      i++;
      n>>=1;
    }

  cout<<bin;
  
    // Code to complement the binary number

  int complement = 0, j=0;

  while(bin!=0)
    {
      int d = bin%10;
      if(d==0)
      {
        complement = ((1 * pow(10,j)) + complement);
        j++;
        bin/=10;
      }
      else if (d==1)
      {
        j++;
        bin/=10;
      }
    }

  cout<<"The complement is: "<<complement;
  
  // 1009. - My try final code
  
  class Solution {
public:
    int bitwiseComplement(int n) {
        // store the binary number
        
        long int  bin = 0, i=0;

        while(n!=0)
        {
            int bit = n&1;
            bin = ((bit * pow(10,i)) + bin);
            i++;
            n>>=1;
        }


        
        // complement the binary number
        
        long int complement = 0, j=0;
        if(bin==0)
        {
            complement = 1;
        }

        while(bin!=0)
        {
            int d = bin%10;
            if(d==0)
            {
                complement = ((1 * pow(10,j)) + complement);
                j++;
                bin/=10;
            }
            else if (d==1)
            {
                j++;
                bin/=10;
            }
        }
        
        // convert to decimal number
        
        int ans=0, k=0;
        while(complement != 0)
        {
            int digit = complement % 10;
            ans = ans + (digit * pow(2,k));
            k++;
            complement/=10;
        }
        
        return ans;
        
    }
};

// 1009. Actual solution:
  
  return 0;
}
