define keyword - used to define macro variables

#include<iostream> - these are preprocessor directives
preprocessor directives are declared using '#'
these are instructions that are referred to before the code is compied

#include<iostream> --> means the iostream code is copied into your code and referred to whenever required during execution of your code

suppose we have written a code over 3 years that has used the value of pi=3.14 in 1000 places.
now the value needs to be changed.
it will be inefficienct to change it in every place.

optimised apporach will be to create a variable named pi=3.14 and use it.
we can just change the variable value when reqd.

the problem here is;
  -   the variable will take up space which will hamper performance ( very little but >0)
  -   someone mistakenly changes the value of the variable within the program

Solution:

#define PI 3.14
We declare a macro 

what is a macro?
Ans :  It is a piece of code in a program that is replaced by value of macro.

BTS : before compilation, all the places where macro has been used in the program, it will be replaced with the value of macro i.e. 3.14

Advantages :
   -   no memory used as macro is not a variable that has been defined; it is only a piece of code that gets replaced with its value before compile time
   -   the value can't be changed during the program; no possibility of error



__________________________________________________________________________________________________________________________________________________________


Global variables : will be accessible to any function
Don't use; falls under bad practise
because any function can change its value and that will be a problem to find out.


__________________________________________________________________________________________________________________________________________________________



Inline functions :  used to reduce the function call overhead
implement using 'inline' keyword
use if function body is only of one line
some compilers might work even if function body is of 2-3 lines
not possible to use inline functions if function body is greater than 3 lines

BTS : function name is replaced with function body where the function is called
advantages:
   -   increased readability of code
   -   no extra space will be alloted for variables in a function
   -   no extra time required to call a function and return a value from it

adv:
  1. no extra memory usage
  2. no function call overhead

When we call a function some time is taken to go the function and then return back to the main function
                                            +
some additional memory space might be used by the function call

we can optimise this using inline functions



__________________________________________________________________________________________________________________________________________________________



Default Arguements:

initializes arguements by default and there won't be a problem if we don't pass that arguement while the function is called
Important: all the default arguements must be the rightmost arguements in the function

eg. void print( int arr[], int n, int start=0){}


__________________________________________________________________________________________________________________________________________________________
