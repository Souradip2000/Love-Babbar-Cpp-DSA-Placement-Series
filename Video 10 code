#include <iostream>
#include<math.h>

using namespace std;

// Function to find unique element 
int uniqueElement(int arr[], int n)
{
  int unique = NULL;
  for(int i=0; i<n; i++)
    {
      int flag = 0;
      // unique = arr[i];
      for(int j=0; j<n; j++)
        {
          
          if( i!=j)
          {
            if( arr[i] == arr[j])
            {
              flag = 1;
              break;
            }
          }
        }
      if( flag==0 )
      {
        unique = arr[i];
        break;
      }
    }
  return unique;
}

// Code to find duplicate element in an array containing n elements and a minimum of n-1 different elements
int main() {
  int arr[5] = {1, 2, 4, 2, 1};
  int n = uniqueElement(arr,5);
  cout << "The unique element is : " << n;
  
  return 0;
}


#include <iostream>

using namespace std;

int findDuplicate(int arr[]) 
{
    // Write your code here
	for( int i=0; i<5; i++)
    {
        for(int j=0; j<5; j++)
        {
          if(i!=j)
          {
            if( (arr[i] ^ arr[j]) == 0)
            {
              return arr[i];
            }
                
          }
        }
    }
}



int main() {
  int arr[5] = {1,2,4,3,4};
  cout << findDuplicate(arr);
}










//Find the unique element in an array

int findUnique(int *arr, int n)
{
    //Write your code here
    int unique = NULL;
  for(int i=0; i<n; i++)
    {
      int flag = 0;
      // unique = arr[i];
      for(int j=0; j<n; j++)
        {
          
          if( i!=j)
          {
            if( arr[i] == arr[j])
            {
              flag = 1;
              break;
            }
          }
        }
      if( flag==0 )
      {
        unique = arr[i];
        break;
      }
    }
  return unique;
}
