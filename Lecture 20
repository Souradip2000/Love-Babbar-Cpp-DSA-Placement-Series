88. Merge sorted array

class Solution {
public:
    void merge(vector<int>& arr1, int m, vector<int>& arr2, int n) {
        int i=0;
        int j=0;
        int k=0;
        vector<int> ans;

        while(i<m && j<n)
        {
            if(arr1[i] < arr2[j])
            {
                ans.push_back(arr1[i]);
                i++;
            }
            else 
            {
                ans.push_back(arr2[j]);
                j++;
            }
        }

        while(i<m)
        {
            ans.push_back(arr1[i]);
            i++;
        }

        while(j<n)
        {
            ans.push_back(arr2[j]);
            j++;
        }

        for(int l=0; l<ans.size(); l++)
        {
            arr1[l] = ans[l];
        }
    }
};

//283. Move zeros

class Solution {
public:
    void moveZeroes(vector<int>& arr) {
        for(int i=0; i<arr.size()-1; i++)
        {
            if(arr[i] == 0)
            {
                int index = i;
                for(int j=i+1; j<arr.size(); j++)
                {
                    if(arr[j]==0)
                        continue;
                    swap(arr[index++],arr[j]);
                }
            }
        }
    }
};
